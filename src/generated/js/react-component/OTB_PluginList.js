// OTB_PluginList React Component
//
// Generated by IC STRATEGY
//
// WARNING: Do not change this code; it will be overwritten by the next generation run!
//          Change the code only in the Visual Paradigm Project.

var DomainAPI = require('../domain-entity/DomainAPI');
import React from 'react';
import * as _ from 'lodash';
import OTB_RepositoryPlugin from './OTB_RepositoryPlugin';

class OTB_PluginList extends React.Component {
    constructor(props) {
        super(props);
    };
    static defaultProps = {
        application: null,
        searchFilter: ''
    };
    render() {
        var self = this;
        if (true) {
            return(
                <div className={"plugin-list " + 'container'} style={self.props.style || {}} >
                    { ((true) && (self.filterPlugins() && self.filterPlugins() && self.filterPlugins())) ? self.filterPlugins().map(function(item, index) {
                        return (<OTB_RepositoryPlugin plugin={item} index={index} key={item.id || index} />);
                    }) : '' }
                </div>
            );
        }
        else {
            return <span />;
        };
    };
    filterPlugins = () => {
        var self = this;
        var plugins = self.props.application.get('appRepository').get('repositoryPlugins');
        return _.filter(plugins, function(p){ return p.get('name').toLowerCase().indexOf(self.props.searchFilter.toLowerCase()) != -1 || p.get('description').toLowerCase().indexOf(self.props.searchFilter.toLowerCase()) != -1; });
    };
};

export default OTB_PluginList;
