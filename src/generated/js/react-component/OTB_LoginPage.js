// OTB_LoginPage React Component
//
// Generated by IC STRATEGY
//
// WARNING: Do not change this code; it will be overwritten by the next generation run!
//          Change the code only in the Visual Paradigm Project.

var DomainAPI = require('../domain-entity/DomainAPI');
import React from 'react';
import * as _ from 'lodash';
import { withRouter } from 'react-router-dom';
import * as firebase from 'firebase';
import { FirebaseManager } from '../../../js/4-infrastructure/databaseManagers/FirebaseManager';
import OTB_GeneralH1 from './OTB_GeneralH1';

class OTB_LoginPage extends React.Component {
    constructor(props) {
        super(props);
    };
    static defaultProps = {
        user: null,
        application: null
    };
    render() {
        var self = this;
        if (true) {
            return(
                <div className={"page login-page " + 'page-content'} style={self.props.style || {}} >
                    <OTB_GeneralH1 title={'Logging in, please wait...'} />
                </div>
            );
        }
        else {
            return <span />;
        };
    };
    componentDidMount() {
        var self = this;
        
        var http = require('http');
        
        var options = {
            host: window.location.host,
            path: '/getAuthToken?code=' + self.props.match.params.code
        }
        
        if(window.location.host == "localhost:3000") {
            options['port'] = 3000;
            options['host'] = "localhost";
        }
        
        var callback = function(response){
            var str = ''
            response.on('data', function (chunk) {
                str += chunk;
            });
        
            response.on('end', function(){
                var token = str;
                if(token){
                    firebase.auth().signInWithCustomToken(token)
                        .then(function(authData) {
                            console.log("Login Succeeded!", authData);
                            window.location.href = "http://" + window.location.host;
                        })
                        .catch(function(error) {
                            console.log("Login Failed!", error);
                        });
                }
                console.log(token);
            });
        }
        
        http.request(options, callback).end();
    };
};

export default withRouter(OTB_LoginPage);
