// OTB_User Controllers
// 
// Generated by IC STRATEGY
//
// WARNING: Do not change this code; it will be overwritten by the next generation run!
//          Change the code only in the Visual Paradigm Project.

import * as Form from '../form/OTB_User';
import {OTB_User} from '../domain-entity/OTB_User';
var DomainAPI = require('../domain-entity/DomainAPI');

var CreateController = function(contextObject) {
   var form = new Form.Create(contextObject).open();
   $.when(form).done(function(formData) {
       if (formData) {
           switch(formData.action) {
               case 'save':
                   formData.values = formData.values || {};
                   if (contextObject['ownCommandCategories']) {
                       formData.values['ownCommandCategories'] = contextObject['ownCommandCategories'];
                   }
                   if (contextObject['ownLevelRanks']) {
                       formData.values['ownLevelRanks'] = contextObject['ownLevelRanks'];
                   }
                   if (contextObject['ownPointRanks']) {
                       formData.values['ownPointRanks'] = contextObject['ownPointRanks'];
                   }
                   if (contextObject['ownLevels']) {
                       formData.values['ownLevels'] = contextObject['ownLevels'];
                   }
                   if (contextObject['ownVariableCategories']) {
                       formData.values['ownVariableCategories'] = contextObject['ownVariableCategories'];
                   }
                   if (contextObject['ownFunctionCategories']) {
                       formData.values['ownFunctionCategories'] = contextObject['ownFunctionCategories'];
                   }
                   if (contextObject['ownPlugins']) {
                       formData.values['ownPlugins'] = contextObject['ownPlugins'];
                   }
                   if (contextObject['usedPlugins']) {
                       formData.values['usedPlugins'] = contextObject['usedPlugins'];
                   }
                   if (contextObject['activeDefaultCommands']) {
                       formData.values['activeDefaultCommands'] = contextObject['activeDefaultCommands'];
                   }
                   if (contextObject['ownPoints']) {
                       formData.values['ownPoints'] = contextObject['ownPoints'];
                   }
                   if (contextObject['ownQueueVideos']) {
                       formData.values['ownQueueVideos'] = contextObject['ownQueueVideos'];
                   }
                   if (contextObject['ownHistoryVideos']) {
                       formData.values['ownHistoryVideos'] = contextObject['ownHistoryVideos'];
                   }
                   DomainAPI.OTB_UserCreate(formData.values, contextObject.user);
                   break;
           }
       }
   });
};
var UpdateController = function(contextObject) {
   function openUpdateForm(loadedEntity, user) {
       var form = new Form.Update(contextObject).open(loadedEntity.getValues());
       $.when(form).done(function(formData) {
           if (formData) {
               switch(formData.action) {
                   case 'save':
                       loadedEntity.setValues(formData.values);
                       DomainAPI.OTB_UserUpdate(loadedEntity, formData.values, user);
                       break;
                   case 'delete':
                       DomainAPI.OTB_UserDelete(loadedEntity, user);
                       break;
               }
           }
       });
   }
   var entity = contextObject.entity || contextObject;
   if (entity.loadStatus === 'proxy') {
       entity.loadInstance(OTB_User, entity.id, function(loadedEntity) {
           openUpdateForm(loadedEntity, contextObject.user);
       }, contextObject.user);
   } else {
       openUpdateForm(entity, contextObject.user);
   }
};
module.exports = {
   Create: CreateController,
   Update: UpdateController
};

