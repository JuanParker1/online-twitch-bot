// OTB_LPConfirmButton React Component
//
// Generated by IC STRATEGY
//
// WARNING: Do not change this code; it will be overwritten by the next generation run!
//          Change the code only in the Visual Paradigm Project.

import React from 'react';
import * as _ from 'lodash';
var DomainAPI = require('../domain-entity/DomainAPI');

class OTB_LPConfirmButton extends React.Component {
   constructor(props) {
       super(props);
   };
   static defaultProps = {
           user: null
   };
   render() {
       var self = this;
return(
    <a className="button" onClick={self.onClick}>Confirm Changes</a>
);
   };
   onClick = () => {
       var self = this;

var pointSettings = {
    enabled: self.props.user.get('ownPointRanks').get ? self.props.user.get('ownPointRanks').get('enabled') : false,
    pointspm: self.props.user.get('ownPointRanks').get ? self.props.user.get('ownPointRanks').get('pointspm') : 1,
    pointsmult: self.props.user.get('ownPointRanks').get ? self.props.user.get('ownPointRanks').get('pointsmult') : 2
}

var levelSettings = {
    enabled: self.props.user.get('ownLevelRanks').get ? self.props.user.get('ownLevelRanks').get('enabled') : false,
    xpfunction: self.props.user.get('ownLevelRanks').get ? self.props.user.get('ownLevelRanks').get('xpfunction') : 'prev.xp+prev.xp*1.1',
    xpstart: self.props.user.get('ownLevelRanks').get ? self.props.user.get('ownLevelRanks').get('xpstart') : 100,
    xppm: self.props.user.get('ownLevelRanks').get ? self.props.user.get('ownLevelRanks').get('xppm') : 5,
    xpmult: self.props.user.get('ownLevelRanks').get ? self.props.user.get('ownLevelRanks').get('xpmult') : 2
}

if($('#pointsEnabled').is(':checked'))
    pointSettings['enabled'] = true;
else
    pointSettings['enabled'] = false;

if($('#levelsEnabled').is(':checked'))
    levelSettings['enabled'] = true;
else
    levelSettings['enabled'] = false;

if($('#pointGain').val() != null && $('#pointGain').val() != '')
    pointSettings['pointspm'] = $('#pointGain').val();
if($('#pointSubMult').val() != null && $('#pointSubMult').val() != '')
    pointSettings['pointsmult'] = $('#pointSubMult').val();

if($('#xpSubMult').val() != null && $('#xpSubMult').val() != '')
    levelSettings['xpmult'] = $('#xpSubMult').val();
if($('#xpPerMinute').val() != null && $('#xpPerMinute').val() != '')
    levelSettings['xppm'] = $('#xpPerMinute').val();
if($('#startXp').val() != null && $('#startXp').val() != '')
    levelSettings['xpstart'] = $('#startXp').val();
if($('#xpIncrease').val() != null && $('#xpIncrease').val() != '')
    levelSettings['xpfunction'] = $('#xpIncrease').val();

if(self.props.user.get('ownLevelRanks').get){
    var Entity = self.props.user.get('ownLevelRanks');
    Entity.setValues(_.extend(pointSettings, {pointRanksUser: self.props.user}));
    DomainAPI.OTB_LevelRanksUpdate(Entity, _.extend(levelSettings, {levelRanksUser: self.props.user}));
}
else{
    DomainAPI.OTB_LevelRanksCreate(_.extend(levelSettings, {levelRanksUser: self.props.user}), self.props.user);
}

if(self.props.user.get('ownPointRanks').get){
    var Entity = self.props.user.get('ownPointRanks');
    Entity.setValues(_.extend(pointSettings, {pointRanksUser: self.props.user}));
    DomainAPI.OTB_PointRanksUpdate(Entity, _.extend(pointSettings, {pointRanksUser: self.props.user}));
}
else{
    DomainAPI.OTB_PointRanksCreate(_.extend(pointSettings, {pointRanksUser: self.props.user}), self.props.user);
}





   };
   componentDidMount() {
   };
   componentWillUnmount() {
   };
}

export default OTB_LPConfirmButton;
