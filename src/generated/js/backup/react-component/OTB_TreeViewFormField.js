// OTB_TreeViewFormField React Component
//
// Generated by IC STRATEGY
//
// WARNING: Do not change this code; it will be overwritten by the next generation run!
//          Change the code only in the Visual Paradigm Project.

import React from 'react';
import * as _ from 'lodash';
var DomainAPI = require('../domain-entity/DomainAPI');

class OTB_TreeViewFormField extends React.Component {
   constructor(props) {
       super(props);
   };
   static defaultProps = {

   };
   render() {
              var self = this;
var getTreeViewNodes = function(treeObject){
    return(
        <ul>
            {
                treeObject['nodes'].map(function(obj){
                    return (
                        <li className="node" data-mode="checkbox" key={obj.id} data-name={obj.id}>
                            <span className="leaf">{obj.label || obj.name || obj.get('label') || obj.get('name')}</span>
                            { obj['nodes'] ? <span className="node-toggle"></span> : <span className="bottom-checkbox" /> }
                            { obj['nodes'] ? getTreeViewNodes(obj) : <span /> }
                        </li>
                    );
                })
            }
        </ul>
    );
}
if (self.props.field.isInput) {
   var tree = self.props.field.tree || self.props.field.attribute.tree;
   return (
       <div className="treeview" data-role="treeview" data-name={self.props.field.attribute.name}>{ getTreeViewNodes(tree) }</div>
   );
} else {
   return (
       <div className="form-group">
           <h5>{self.props.field.attribute.label}</h5>
           <div style={{width: '100%'}}>{self.props.field.value}</div>
       </div>
   );
}
   };
   componentDidMount() {
   };
   componentWillUnmount() {
   };
}

export default OTB_TreeViewFormField;
