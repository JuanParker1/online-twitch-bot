// OTB_CommandFunctions React Component
//
// Generated by IC STRATEGY
//
// WARNING: Do not change this code; it will be overwritten by the next generation run!
//          Change the code only in the Visual Paradigm Project.

import React from 'react';
import * as _ from 'lodash';
var DomainAPI = require('../domain-entity/DomainAPI');
import OTB_Table from './OTB_Table';
import OTB_AddCommandFunction from './OTB_AddCommandFunction';
import OTB_CommandFunctionInfo from './OTB_CommandFunctionInfo';

class OTB_CommandFunctions extends React.Component {
   constructor(props) {
       super(props);
   };
   static defaultProps = {
           user: null,
           command: null,
           application: null
   };
   render() {
       var self = this;
       if (true){ 
           return(
               <OTB_Table className="o-t-b_-command-functions"  titles={['Function Name', 'Function Description', 'Function Handler']} title={'Command Functions'}>
{                  self.getCommandFunctions() && self.getCommandFunctions() ? self.getCommandFunctions().map(function(item, index) {
                      return(<OTB_CommandFunctionInfo commandFunction={item} index={index}  key={item.id || index} command={self.props.command} />);
                  }) : ''}
                  {(self.props.command.get('entityLocation').indexOf('Application') <= -1 || (self.props.user && self.props.user.hasRole('administrator'))) ? <OTB_AddCommandFunction application={self.props.application} user={self.props.user} command={self.props.command} /> : <span />}
               </OTB_Table>
           );
       } else {
           return (<span />);
       }
   };
   getCommandFunctions = () => {
       var self = this;
var DomainEntitiesList = require('../domain-entity/DomainEntitiesList');
var CommandFunctions = self.props.command.get('commandFunctions');
var VarArray = [];
_.each(CommandFunctions, function(_variable){
    var variable = _variable.syncInstance(DomainEntitiesList('OTB_Function'), _variable.id, function(_item){
        VarArray.push(_item);
    });
});
return VarArray;

   };
   componentDidMount() {
   };
   componentWillUnmount() {
   };
}

export default OTB_CommandFunctions;
