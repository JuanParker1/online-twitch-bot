// OTB_CommandScript React Component
//
// Generated by IC STRATEGY
//
// WARNING: Do not change this code; it will be overwritten by the next generation run!
//          Change the code only in the Visual Paradigm Project.

import React from 'react';
import * as _ from 'lodash';
var DomainAPI = require('../domain-entity/DomainAPI');
import OTB_GeneralH2 from './OTB_GeneralH2';
import OTB_CommandEditor from './OTB_CommandEditor';
import OTB_ThinHR from './OTB_ThinHR';
import OTB_EditCommandScript from './OTB_EditCommandScript';

class OTB_CommandScript extends React.Component {
   constructor(props) {
       super(props);
   };
   static defaultProps = {
           user: null,
           command: null
   };
   render() {
       var self = this;
       if (true){ 
           return(
               <div className={"command-script " + ""} style={self.props.style ||{}} >
                  <OTB_ThinHR />
                  <OTB_GeneralH2 classes={'text-light'} title={'Command Script Editor'} />
                  <OTB_CommandEditor command={self.props.command} />
                  {(self.props.command.get('entityLocation').indexOf('Application') <= -1 || (self.props.user && self.props.user.hasRole('administrator'))) ? <OTB_EditCommandScript command={self.props.command} /> : <span />}
               </div>
           );
       } else {
           return (<span />);
       }
   };
   componentDidMount() {
   };
   componentWillUnmount() {
   };
}

export default OTB_CommandScript;
