// OTB_CommandVariableRow React Component
//
// Generated by IC STRATEGY
//
// WARNING: Do not change this code; it will be overwritten by the next generation run!
//          Change the code only in the Visual Paradigm Project.

import React from 'react';
import * as _ from 'lodash';
var DomainAPI = require('../domain-entity/DomainAPI');
import OTB_CommandVariableActions from './OTB_CommandVariableActions';

class OTB_CommandVariableRow extends React.Component {
   constructor(props) {
       super(props);
   };
   static defaultProps = {
           commandVariable: null,
           user: null
   };
   render() {
       var self = this;
var value = self.props.commandVariable.get('value');
var type = self.props.commandVariable.get('type');
if(type == "1")
    value = "HTTP Request";
else if(type == "2")
    value = "HTTPS Request";
else if(type == "3")
    value = "Prebuilt Value"
return(
    <tr>
        <td>{self.props.commandVariable.get('name')}</td>
        <td>{self.props.commandVariable.get('description')}</td>
        <td>{self.props.commandVariable.get('handler')}</td>
        <td>{value} {(self.props.commandVariable.get('entityLocation').indexOf('Application') <= -1 || (self.props.user && self.props.user.hasRole('administrator'))) ? <OTB_CommandVariableActions commandVariable={self.props.commandVariable} /> : <span />}</td>
    </tr>
);
   };
   componentDidMount() {
   };
   componentWillUnmount() {
   };
}

export default OTB_CommandVariableRow;
